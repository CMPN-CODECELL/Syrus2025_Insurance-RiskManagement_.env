{
  "_id": "45117cac-6a95-4974-8728-59719e820737",
  "aiPersonaId": "0b484d53-b626-4299-89d5-354489aa7aae",
  "integrationId": "ma-document-processing-agent-8715-primary-workflow-for-document-processing-agent",
  "isMiniAgentPrimaryWorkflow": true,
  "name": "Primary Workflow for Document processing Agent",
  "publisherAccountId": "b01bfb4c-bd4e-481e-bf12-abeaf8cc7e49",
  "startTaskId": "904c7885-5d27-4eb5-839e-17552486fae2",
  "status": "Active",
  "tasks": [
    {
      "_id": "904c7885-5d27-4eb5-839e-17552486fae2",
      "type": "PassThrough",
      "config": {
        "name": "Pass Through",
        "description": "Pass through the input to the output"
      },
      "transitions": [
        {
          "_id": "137d1a83-48b4-4655-99b9-896d657a19a6-904c7885-5d27-4eb5-839e-17552486fae2",
          "nextTask": "137d1a83-48b4-4655-99b9-896d657a19a6",
          "name": "If query doesnt exists",
          "rules": [
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "e17fe998-a056-45cf-a63d-786665b5f41f-904c7885-5d27-4eb5-839e-17552486fae2",
          "nextTask": "e17fe998-a056-45cf-a63d-786665b5f41f",
          "name": "If intents are already classified",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.intents"
            },
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "904c7885-5d27-4eb5-839e-17552486fae2-682b79ba-a2fb-4cef-8337-f564a719c728",
          "name": "If query exists",
          "nextTask": "682b79ba-a2fb-4cef-8337-f564a719c728",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            },
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.intents"
            }
          ]
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$input.query"
        },
        {
          "name": "rawQuery",
          "referencePath": "$input.rawQuery"
        },
        {
          "name": "conversationId",
          "referencePath": "$input.conversationId"
        }
      ]
    },
    {
      "_id": "137d1a83-48b4-4655-99b9-896d657a19a6",
      "type": "Input",
      "config": {
        "name": "User Input",
        "description": "Get user input",
        "type": "string"
      },
      "transitions": [
        {
          "_id": "137d1a83-48b4-4655-99b9-896d657a19a6-682b79ba-a2fb-4cef-8337-f564a719c728",
          "name": "Default",
          "nextTask": "682b79ba-a2fb-4cef-8337-f564a719c728"
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$output.userInput"
        },
        {
          "name": "rawQuery",
          "referencePath": "$output.userInput"
        },
        {
          "name": "selfLoopMiniAgent",
          "referencePath": "true"
        }
      ]
    },
    {
      "_id": "682b79ba-a2fb-4cef-8337-f564a719c728",
      "type": "Loader",
      "config": {
        "name": "Loader",
        "description": "Display loader message",
        "type": "loader",
        "text": "Just a moment... identifying the best approach to assist you."
      },
      "transitions": [
        {
          "_id": "682b79ba-a2fb-4cef-8337-f564a719c728-f9008d2e-badc-4142-926d-1a8ec13d8ae5",
          "name": "Default",
          "nextTask": "f9008d2e-badc-4142-926d-1a8ec13d8ae5"
        }
      ]
    },
    {
      "_id": "f9008d2e-badc-4142-926d-1a8ec13d8ae5",
      "type": "IntentClassification",
      "config": {
        "name": "Intent Classification",
        "description": "Classify the intent of the user message",
        "modelId": "gpt-4o",
        "intents": [
          {
            "name": "generate_claim_summary",
            "description": "Provide a structured summary of the claim, including findings from all previous sub-agents.",
            "examples": [
              ""
            ]
          },
          {
            "name": "make_final_decision",
            "description": "Approve, reject, or escalate the claim based on combined analysis.",
            "examples": [
              ""
            ]
          }
        ],
        "query": "$agent.query"
      },
      "transitions": [
        {
          "_id": "f9008d2e-badc-4142-926d-1a8ec13d8ae5-e17fe998-a056-45cf-a63d-786665b5f41f",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "true"
            }
          ],
          "nextTask": "e17fe998-a056-45cf-a63d-786665b5f41f"
        },
        {
          "_id": "f9008d2e-badc-4142-926d-1a8ec13d8ae5-8f73da6f-9af4-4111-8fbb-cffd1525c5b0",
          "name": "If No Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "false"
            }
          ],
          "nextTask": "8f73da6f-9af4-4111-8fbb-cffd1525c5b0"
        }
      ]
    },
    {
      "_id": "e17fe998-a056-45cf-a63d-786665b5f41f",
      "type": "JSFunction",
      "config": {
        "name": "JS Function",
        "description": "Execute JS function",
        "code": "\nconst main = () => {\n    const currentExecutionId = _id;\n    const intents = agent?.icIntents?.[currentExecutionId] || input.intents;\n    const currentIndex = agent?.icLoopIndexes?.[currentExecutionId] || 0;\n    const currentIntent = intents[currentIndex] || {};\n    const { intent, task } = currentIntent;\n    const state = currentIndex === intents.length ? 'end' : 'continue'\n    const icLoopIndexes = { ...(agent?.icLoopIndexes || {}), [_id]: state === 'end' ? undefined : currentIndex + 1 };\n    const icIntents = { ...(agent?.icIntents || {}), [_id]: state === 'end' ? undefined : intents };\n    return { ...input, intent, state: currentIndex === intents.length ? 'end' : 'continue', icLoopIndexes, icIntents, query: task };\n};\n\nmain()\n"
      },
      "globalVariables": [
        {
          "referencePath": "$output.icLoopIndexes",
          "name": "icLoopIndexes"
        },
        {
          "referencePath": "$output.icIntents",
          "name": "icIntents"
        }
      ],
      "transitions": [
        {
          "_id": "e17fe998-a056-45cf-a63d-786665b5f41f-9eb9f24d-8352-40e5-80bd-eeaad6dee29b",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "generate_claim_summary"
            }
          ],
          "nextTask": "9eb9f24d-8352-40e5-80bd-eeaad6dee29b"
        },
        {
          "_id": "e17fe998-a056-45cf-a63d-786665b5f41f-d6596a6e-90c3-407b-8137-b2fc18a2d647",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "make_final_decision"
            }
          ],
          "nextTask": "d6596a6e-90c3-407b-8137-b2fc18a2d647"
        },
        {
          "_id": "e17fe998-a056-45cf-a63d-786665b5f41f-137d1a83-48b4-4655-99b9-896d657a19a6",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            },
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.state",
              "value": "end"
            }
          ],
          "nextTask": "137d1a83-48b4-4655-99b9-896d657a19a6"
        }
      ]
    },
    {
      "_id": "9eb9f24d-8352-40e5-80bd-eeaad6dee29b",
      "type": "Workflow",
      "config": {
        "name": "Intent - generate_claim_summary",
        "description": "Workflow for intent - generate_claim_summary",
        "workflowId": "f333d26b-a95a-4872-9c81-19d2428d03b1"
      },
      "transitions": [
        {
          "_id": "9eb9f24d-8352-40e5-80bd-eeaad6dee29b-e17fe998-a056-45cf-a63d-786665b5f41f",
          "name": "Mini agent execution completed",
          "nextTask": "e17fe998-a056-45cf-a63d-786665b5f41f"
        }
      ]
    },
    {
      "_id": "d6596a6e-90c3-407b-8137-b2fc18a2d647",
      "type": "Workflow",
      "config": {
        "name": "Intent - make_final_decision",
        "description": "Workflow for intent - make_final_decision",
        "workflowId": "9f8e18b5-6fec-409e-9301-aec26c7dba53"
      },
      "transitions": [
        {
          "_id": "d6596a6e-90c3-407b-8137-b2fc18a2d647-e17fe998-a056-45cf-a63d-786665b5f41f",
          "name": "Mini agent execution completed",
          "nextTask": "e17fe998-a056-45cf-a63d-786665b5f41f"
        }
      ]
    },
    {
      "_id": "8f73da6f-9af4-4111-8fbb-cffd1525c5b0",
      "transitions": [
        {
          "_id": "8f73da6f-9af4-4111-8fbb-cffd1525c5b0-137d1a83-48b4-4655-99b9-896d657a19a6",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "137d1a83-48b4-4655-99b9-896d657a19a6"
        }
      ],
      "type": "Output",
      "config": {
        "name": "Output",
        "description": "Output the response to the user",
        "type": "external",
        "text": "Unable to complete task $agent.query"
      }
    },
    {
      "_id": "ef2558a6-4c59-4af9-8746-385ac3779cc3",
      "transitions": [
        {
          "_id": "ef2558a6-4c59-4af9-8746-385ac3779cc3-137d1a83-48b4-4655-99b9-896d657a19a6",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "137d1a83-48b4-4655-99b9-896d657a19a6"
        }
      ],
      "type": "Display",
      "config": {
        "name": "Display",
        "description": "Display the response to the user",
        "type": "text",
        "text": "$input.content"
      }
    }
  ],
  "type": "Conversational",
  "version": "latest"
}