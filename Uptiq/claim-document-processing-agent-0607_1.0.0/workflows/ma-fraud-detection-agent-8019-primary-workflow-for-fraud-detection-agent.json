{
  "_id": "f0d97d6c-8131-4212-af06-9bbf914c77be",
  "aiPersonaId": "0b484d53-b626-4299-89d5-354489aa7aae",
  "integrationId": "ma-fraud-detection-agent-8019-primary-workflow-for-fraud-detection-agent",
  "isMiniAgentPrimaryWorkflow": true,
  "name": "Primary Workflow for Fraud Detection Agent",
  "publisherAccountId": "b01bfb4c-bd4e-481e-bf12-abeaf8cc7e49",
  "startTaskId": "4bba3e0e-8b59-4048-90bc-60fc41cb36d9",
  "status": "Active",
  "tasks": [
    {
      "_id": "4bba3e0e-8b59-4048-90bc-60fc41cb36d9",
      "type": "PassThrough",
      "config": {
        "name": "Pass Through",
        "description": "Pass through the input to the output"
      },
      "transitions": [
        {
          "_id": "31e7deb1-0762-4b27-aaac-f3deb2d764d2-4bba3e0e-8b59-4048-90bc-60fc41cb36d9",
          "nextTask": "31e7deb1-0762-4b27-aaac-f3deb2d764d2",
          "name": "If query doesnt exists",
          "rules": [
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "ac6b7096-64b0-40ba-9a03-776f68e974d7-4bba3e0e-8b59-4048-90bc-60fc41cb36d9",
          "nextTask": "ac6b7096-64b0-40ba-9a03-776f68e974d7",
          "name": "If intents are already classified",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.intents"
            },
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "4bba3e0e-8b59-4048-90bc-60fc41cb36d9-2c0d3253-f46e-4b4f-80fa-3ea5def5a85e",
          "name": "If query exists",
          "nextTask": "2c0d3253-f46e-4b4f-80fa-3ea5def5a85e",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            },
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.intents"
            }
          ]
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$input.query"
        },
        {
          "name": "rawQuery",
          "referencePath": "$input.rawQuery"
        },
        {
          "name": "conversationId",
          "referencePath": "$input.conversationId"
        }
      ]
    },
    {
      "_id": "31e7deb1-0762-4b27-aaac-f3deb2d764d2",
      "type": "Input",
      "config": {
        "name": "User Input",
        "description": "Get user input",
        "type": "string"
      },
      "transitions": [
        {
          "_id": "31e7deb1-0762-4b27-aaac-f3deb2d764d2-2c0d3253-f46e-4b4f-80fa-3ea5def5a85e",
          "name": "Default",
          "nextTask": "2c0d3253-f46e-4b4f-80fa-3ea5def5a85e"
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$output.userInput"
        },
        {
          "name": "rawQuery",
          "referencePath": "$output.userInput"
        },
        {
          "name": "selfLoopMiniAgent",
          "referencePath": "true"
        }
      ]
    },
    {
      "_id": "2c0d3253-f46e-4b4f-80fa-3ea5def5a85e",
      "type": "Loader",
      "config": {
        "name": "Loader",
        "description": "Display loader message",
        "type": "loader",
        "text": "Just a moment... identifying the best approach to assist you."
      },
      "transitions": [
        {
          "_id": "2c0d3253-f46e-4b4f-80fa-3ea5def5a85e-6010e009-92a0-4584-b348-c3ef8bf43ea6",
          "name": "Default",
          "nextTask": "6010e009-92a0-4584-b348-c3ef8bf43ea6"
        }
      ]
    },
    {
      "_id": "6010e009-92a0-4584-b348-c3ef8bf43ea6",
      "type": "IntentClassification",
      "config": {
        "name": "Intent Classification",
        "description": "Classify the intent of the user message",
        "modelId": "gpt-4o",
        "intents": [
          {
            "name": "detect_fraudulent_patterns",
            "description": "Identify overbilling, fake prescriptions, or falsified medical reports.",
            "examples": [
              ""
            ]
          }
        ],
        "query": "$agent.query"
      },
      "transitions": [
        {
          "_id": "6010e009-92a0-4584-b348-c3ef8bf43ea6-ac6b7096-64b0-40ba-9a03-776f68e974d7",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "true"
            }
          ],
          "nextTask": "ac6b7096-64b0-40ba-9a03-776f68e974d7"
        },
        {
          "_id": "6010e009-92a0-4584-b348-c3ef8bf43ea6-1c8881c6-6d11-4210-8751-abc6049d2991",
          "name": "If No Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "false"
            }
          ],
          "nextTask": "1c8881c6-6d11-4210-8751-abc6049d2991"
        }
      ]
    },
    {
      "_id": "ac6b7096-64b0-40ba-9a03-776f68e974d7",
      "type": "JSFunction",
      "config": {
        "name": "JS Function",
        "description": "Execute JS function",
        "code": "\nconst main = () => {\n    const currentExecutionId = _id;\n    const intents = agent?.icIntents?.[currentExecutionId] || input.intents;\n    const currentIndex = agent?.icLoopIndexes?.[currentExecutionId] || 0;\n    const currentIntent = intents[currentIndex] || {};\n    const { intent, task } = currentIntent;\n    const state = currentIndex === intents.length ? 'end' : 'continue'\n    const icLoopIndexes = { ...(agent?.icLoopIndexes || {}), [_id]: state === 'end' ? undefined : currentIndex + 1 };\n    const icIntents = { ...(agent?.icIntents || {}), [_id]: state === 'end' ? undefined : intents };\n    return { ...input, intent, state: currentIndex === intents.length ? 'end' : 'continue', icLoopIndexes, icIntents, query: task };\n};\n\nmain()\n"
      },
      "globalVariables": [
        {
          "referencePath": "$output.icLoopIndexes",
          "name": "icLoopIndexes"
        },
        {
          "referencePath": "$output.icIntents",
          "name": "icIntents"
        }
      ],
      "transitions": [
        {
          "_id": "ac6b7096-64b0-40ba-9a03-776f68e974d7-0ea4954a-79f1-4de8-bf0b-c3d5dc4dd16a",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "detect_fraudulent_patterns"
            }
          ],
          "nextTask": "0ea4954a-79f1-4de8-bf0b-c3d5dc4dd16a"
        },
        {
          "_id": "ac6b7096-64b0-40ba-9a03-776f68e974d7-31e7deb1-0762-4b27-aaac-f3deb2d764d2",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            },
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.state",
              "value": "end"
            }
          ],
          "nextTask": "31e7deb1-0762-4b27-aaac-f3deb2d764d2"
        }
      ]
    },
    {
      "_id": "0ea4954a-79f1-4de8-bf0b-c3d5dc4dd16a",
      "type": "Workflow",
      "config": {
        "name": "Intent - detect_fraudulent_patterns",
        "description": "Workflow for intent - detect_fraudulent_patterns",
        "workflowId": "a648f981-0527-498e-9659-7bf472ff4977"
      },
      "transitions": [
        {
          "_id": "0ea4954a-79f1-4de8-bf0b-c3d5dc4dd16a-ac6b7096-64b0-40ba-9a03-776f68e974d7",
          "name": "Mini agent execution completed",
          "nextTask": "ac6b7096-64b0-40ba-9a03-776f68e974d7"
        }
      ]
    },
    {
      "_id": "1c8881c6-6d11-4210-8751-abc6049d2991",
      "transitions": [
        {
          "_id": "1c8881c6-6d11-4210-8751-abc6049d2991-31e7deb1-0762-4b27-aaac-f3deb2d764d2",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "31e7deb1-0762-4b27-aaac-f3deb2d764d2"
        }
      ],
      "type": "Output",
      "config": {
        "name": "Output",
        "description": "Output the response to the user",
        "type": "external",
        "text": "Unable to complete task $agent.query"
      }
    },
    {
      "_id": "caf9fd9e-b89d-4ff9-8fd4-f733a50826d5",
      "transitions": [
        {
          "_id": "caf9fd9e-b89d-4ff9-8fd4-f733a50826d5-31e7deb1-0762-4b27-aaac-f3deb2d764d2",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "31e7deb1-0762-4b27-aaac-f3deb2d764d2"
        }
      ],
      "type": "Display",
      "config": {
        "name": "Display",
        "description": "Display the response to the user",
        "type": "text",
        "text": "$input.content"
      }
    }
  ],
  "type": "Conversational",
  "version": "latest"
}