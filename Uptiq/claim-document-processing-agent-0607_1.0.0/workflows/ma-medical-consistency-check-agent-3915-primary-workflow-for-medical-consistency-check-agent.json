{
  "_id": "d0dad2e1-d706-4860-983b-8a6f643cecf1",
  "aiPersonaId": "0b484d53-b626-4299-89d5-354489aa7aae",
  "integrationId": "ma-medical-consistency-check-agent-3915-primary-workflow-for-medical-consistency-check-agent",
  "isMiniAgentPrimaryWorkflow": true,
  "name": "Primary Workflow for Medical Consistency Check Agent",
  "publisherAccountId": "b01bfb4c-bd4e-481e-bf12-abeaf8cc7e49",
  "startTaskId": "ea6fa8ad-cd90-46a0-a02c-32ed00db4178",
  "status": "Active",
  "tasks": [
    {
      "_id": "ea6fa8ad-cd90-46a0-a02c-32ed00db4178",
      "type": "PassThrough",
      "config": {
        "name": "Pass Through",
        "description": "Pass through the input to the output"
      },
      "transitions": [
        {
          "_id": "e849a7f8-8c6c-4c3c-8523-3ff279b875c6-ea6fa8ad-cd90-46a0-a02c-32ed00db4178",
          "nextTask": "e849a7f8-8c6c-4c3c-8523-3ff279b875c6",
          "name": "If query doesnt exists",
          "rules": [
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "20f977f6-4b1e-45c9-a82c-6b4be09d78f5-ea6fa8ad-cd90-46a0-a02c-32ed00db4178",
          "nextTask": "20f977f6-4b1e-45c9-a82c-6b4be09d78f5",
          "name": "If intents are already classified",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.intents"
            },
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "ea6fa8ad-cd90-46a0-a02c-32ed00db4178-dfccc282-0cb4-48a7-8384-cec4a235d109",
          "name": "If query exists",
          "nextTask": "dfccc282-0cb4-48a7-8384-cec4a235d109",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            },
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.intents"
            }
          ]
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$input.query"
        },
        {
          "name": "rawQuery",
          "referencePath": "$input.rawQuery"
        },
        {
          "name": "conversationId",
          "referencePath": "$input.conversationId"
        }
      ]
    },
    {
      "_id": "e849a7f8-8c6c-4c3c-8523-3ff279b875c6",
      "type": "Input",
      "config": {
        "name": "User Input",
        "description": "Get user input",
        "type": "string"
      },
      "transitions": [
        {
          "_id": "e849a7f8-8c6c-4c3c-8523-3ff279b875c6-dfccc282-0cb4-48a7-8384-cec4a235d109",
          "name": "Default",
          "nextTask": "dfccc282-0cb4-48a7-8384-cec4a235d109"
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$output.userInput"
        },
        {
          "name": "rawQuery",
          "referencePath": "$output.userInput"
        },
        {
          "name": "selfLoopMiniAgent",
          "referencePath": "true"
        }
      ]
    },
    {
      "_id": "dfccc282-0cb4-48a7-8384-cec4a235d109",
      "type": "Loader",
      "config": {
        "name": "Loader",
        "description": "Display loader message",
        "type": "loader",
        "text": "Just a moment... identifying the best approach to assist you."
      },
      "transitions": [
        {
          "_id": "dfccc282-0cb4-48a7-8384-cec4a235d109-125f7235-05d3-4a23-a84f-b64438edd9d5",
          "name": "Default",
          "nextTask": "125f7235-05d3-4a23-a84f-b64438edd9d5"
        }
      ]
    },
    {
      "_id": "125f7235-05d3-4a23-a84f-b64438edd9d5",
      "type": "IntentClassification",
      "config": {
        "name": "Intent Classification",
        "description": "Classify the intent of the user message",
        "modelId": "gpt-4o",
        "intents": [
          {
            "name": "verify_treatment_consistency",
            "description": "Cross-check if diagnosis, prescribed treatment, and procedures align correctly.\nIdentify mismatches in medications with injuries, or surgeries.",
            "examples": [
              ""
            ]
          },
          {
            "name": "detect_unnecessary_treatments",
            "description": "Flag treatments/medications that seem irrelevant or excessive based on the patientâ€™s condition.",
            "examples": [
              ""
            ]
          }
        ],
        "query": "$agent.query"
      },
      "transitions": [
        {
          "_id": "125f7235-05d3-4a23-a84f-b64438edd9d5-20f977f6-4b1e-45c9-a82c-6b4be09d78f5",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "true"
            }
          ],
          "nextTask": "20f977f6-4b1e-45c9-a82c-6b4be09d78f5"
        },
        {
          "_id": "125f7235-05d3-4a23-a84f-b64438edd9d5-64c20843-76e1-488a-b71b-49f03e715ae3",
          "name": "If No Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "false"
            }
          ],
          "nextTask": "64c20843-76e1-488a-b71b-49f03e715ae3"
        }
      ]
    },
    {
      "_id": "20f977f6-4b1e-45c9-a82c-6b4be09d78f5",
      "type": "JSFunction",
      "config": {
        "name": "JS Function",
        "description": "Execute JS function",
        "code": "\nconst main = () => {\n    const currentExecutionId = _id;\n    const intents = agent?.icIntents?.[currentExecutionId] || input.intents;\n    const currentIndex = agent?.icLoopIndexes?.[currentExecutionId] || 0;\n    const currentIntent = intents[currentIndex] || {};\n    const { intent, task } = currentIntent;\n    const state = currentIndex === intents.length ? 'end' : 'continue'\n    const icLoopIndexes = { ...(agent?.icLoopIndexes || {}), [_id]: state === 'end' ? undefined : currentIndex + 1 };\n    const icIntents = { ...(agent?.icIntents || {}), [_id]: state === 'end' ? undefined : intents };\n    return { ...input, intent, state: currentIndex === intents.length ? 'end' : 'continue', icLoopIndexes, icIntents, query: task };\n};\n\nmain()\n"
      },
      "globalVariables": [
        {
          "referencePath": "$output.icLoopIndexes",
          "name": "icLoopIndexes"
        },
        {
          "referencePath": "$output.icIntents",
          "name": "icIntents"
        }
      ],
      "transitions": [
        {
          "_id": "20f977f6-4b1e-45c9-a82c-6b4be09d78f5-d40f9808-0d9b-4aa1-8cef-8f0b4cd6a374",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "verify_treatment_consistency"
            }
          ],
          "nextTask": "d40f9808-0d9b-4aa1-8cef-8f0b4cd6a374"
        },
        {
          "_id": "20f977f6-4b1e-45c9-a82c-6b4be09d78f5-9fc70f10-9deb-4a34-aba2-648828ada627",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "detect_unnecessary_treatments"
            }
          ],
          "nextTask": "9fc70f10-9deb-4a34-aba2-648828ada627"
        },
        {
          "_id": "20f977f6-4b1e-45c9-a82c-6b4be09d78f5-e849a7f8-8c6c-4c3c-8523-3ff279b875c6",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            },
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.state",
              "value": "end"
            }
          ],
          "nextTask": "e849a7f8-8c6c-4c3c-8523-3ff279b875c6"
        }
      ]
    },
    {
      "_id": "d40f9808-0d9b-4aa1-8cef-8f0b4cd6a374",
      "type": "Workflow",
      "config": {
        "name": "Intent - verify_treatment_consistency",
        "description": "Workflow for intent - verify_treatment_consistency",
        "workflowId": "f309913d-657a-46b1-a77f-ccdf17ffb083"
      },
      "transitions": [
        {
          "_id": "d40f9808-0d9b-4aa1-8cef-8f0b4cd6a374-20f977f6-4b1e-45c9-a82c-6b4be09d78f5",
          "name": "Mini agent execution completed",
          "nextTask": "20f977f6-4b1e-45c9-a82c-6b4be09d78f5"
        }
      ]
    },
    {
      "_id": "9fc70f10-9deb-4a34-aba2-648828ada627",
      "type": "Workflow",
      "config": {
        "name": "Intent - detect_unnecessary_treatments",
        "description": "Workflow for intent - detect_unnecessary_treatments",
        "workflowId": "7c8fbf8c-f95d-4022-b2a3-c9f7cd5a00c4"
      },
      "transitions": [
        {
          "_id": "9fc70f10-9deb-4a34-aba2-648828ada627-20f977f6-4b1e-45c9-a82c-6b4be09d78f5",
          "name": "Mini agent execution completed",
          "nextTask": "20f977f6-4b1e-45c9-a82c-6b4be09d78f5"
        }
      ]
    },
    {
      "_id": "64c20843-76e1-488a-b71b-49f03e715ae3",
      "transitions": [
        {
          "_id": "64c20843-76e1-488a-b71b-49f03e715ae3-e849a7f8-8c6c-4c3c-8523-3ff279b875c6",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "e849a7f8-8c6c-4c3c-8523-3ff279b875c6"
        }
      ],
      "type": "Output",
      "config": {
        "name": "Output",
        "description": "Output the response to the user",
        "type": "external",
        "text": "Unable to complete task $agent.query"
      }
    },
    {
      "_id": "096d0a72-779c-49b6-8cf1-f3e3d08cfefa",
      "transitions": [
        {
          "_id": "096d0a72-779c-49b6-8cf1-f3e3d08cfefa-e849a7f8-8c6c-4c3c-8523-3ff279b875c6",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "e849a7f8-8c6c-4c3c-8523-3ff279b875c6"
        }
      ],
      "type": "Display",
      "config": {
        "name": "Display",
        "description": "Display the response to the user",
        "type": "text",
        "text": "$input.content"
      }
    }
  ],
  "type": "Conversational",
  "version": "latest"
}