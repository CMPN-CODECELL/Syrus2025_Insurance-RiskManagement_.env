{
  "_id": "5a3ba19a-bf4b-4da8-80bf-514a0cacde3a",
  "aiPersonaId": "0b484d53-b626-4299-89d5-354489aa7aae",
  "integrationId": "ma-financial-verification-agent-6936-primary-workflow-for-financial-verification-agent",
  "isMiniAgentPrimaryWorkflow": true,
  "name": "Primary Workflow for Financial Verification Agent",
  "publisherAccountId": "b01bfb4c-bd4e-481e-bf12-abeaf8cc7e49",
  "startTaskId": "69a77eac-2cf1-4239-a79f-fc390242567b",
  "status": "Active",
  "tasks": [
    {
      "_id": "69a77eac-2cf1-4239-a79f-fc390242567b",
      "type": "PassThrough",
      "config": {
        "name": "Pass Through",
        "description": "Pass through the input to the output"
      },
      "transitions": [
        {
          "_id": "0b867707-45f7-4a78-9c65-0047df3024b1-69a77eac-2cf1-4239-a79f-fc390242567b",
          "nextTask": "0b867707-45f7-4a78-9c65-0047df3024b1",
          "name": "If query doesnt exists",
          "rules": [
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "38077cd8-89b4-4d15-99c1-38376aa8f653-69a77eac-2cf1-4239-a79f-fc390242567b",
          "nextTask": "38077cd8-89b4-4d15-99c1-38376aa8f653",
          "name": "If intents are already classified",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.intents"
            },
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "69a77eac-2cf1-4239-a79f-fc390242567b-03223d66-67e2-40c9-bdbd-4c9ff7ea4191",
          "name": "If query exists",
          "nextTask": "03223d66-67e2-40c9-bdbd-4c9ff7ea4191",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            },
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.intents"
            }
          ]
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$input.query"
        },
        {
          "name": "rawQuery",
          "referencePath": "$input.rawQuery"
        },
        {
          "name": "conversationId",
          "referencePath": "$input.conversationId"
        }
      ]
    },
    {
      "_id": "0b867707-45f7-4a78-9c65-0047df3024b1",
      "type": "Input",
      "config": {
        "name": "User Input",
        "description": "Get user input",
        "type": "string"
      },
      "transitions": [
        {
          "_id": "0b867707-45f7-4a78-9c65-0047df3024b1-03223d66-67e2-40c9-bdbd-4c9ff7ea4191",
          "name": "Default",
          "nextTask": "03223d66-67e2-40c9-bdbd-4c9ff7ea4191"
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$output.userInput"
        },
        {
          "name": "rawQuery",
          "referencePath": "$output.userInput"
        },
        {
          "name": "selfLoopMiniAgent",
          "referencePath": "true"
        }
      ]
    },
    {
      "_id": "03223d66-67e2-40c9-bdbd-4c9ff7ea4191",
      "type": "Loader",
      "config": {
        "name": "Loader",
        "description": "Display loader message",
        "type": "loader",
        "text": "Just a moment... identifying the best approach to assist you."
      },
      "transitions": [
        {
          "_id": "03223d66-67e2-40c9-bdbd-4c9ff7ea4191-cddd1cb6-ee28-4a2a-ad05-9399e93be8e9",
          "name": "Default",
          "nextTask": "cddd1cb6-ee28-4a2a-ad05-9399e93be8e9"
        }
      ]
    },
    {
      "_id": "cddd1cb6-ee28-4a2a-ad05-9399e93be8e9",
      "type": "IntentClassification",
      "config": {
        "name": "Intent Classification",
        "description": "Classify the intent of the user message",
        "modelId": "gpt-4o",
        "intents": [
          {
            "name": "validate_claim_amount",
            "description": "Detect overpriced treatments or incorrect calculations.",
            "examples": [
              ""
            ]
          },
          {
            "name": "flag_duplicate_charges",
            "description": "Detect duplicate charges or inflated bills.",
            "examples": [
              ""
            ]
          }
        ],
        "query": "$agent.query"
      },
      "transitions": [
        {
          "_id": "cddd1cb6-ee28-4a2a-ad05-9399e93be8e9-38077cd8-89b4-4d15-99c1-38376aa8f653",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "true"
            }
          ],
          "nextTask": "38077cd8-89b4-4d15-99c1-38376aa8f653"
        },
        {
          "_id": "cddd1cb6-ee28-4a2a-ad05-9399e93be8e9-1491a48b-e189-4bf3-873d-c09bdc377bda",
          "name": "If No Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "false"
            }
          ],
          "nextTask": "1491a48b-e189-4bf3-873d-c09bdc377bda"
        }
      ]
    },
    {
      "_id": "38077cd8-89b4-4d15-99c1-38376aa8f653",
      "type": "JSFunction",
      "config": {
        "name": "JS Function",
        "description": "Execute JS function",
        "code": "\nconst main = () => {\n    const currentExecutionId = _id;\n    const intents = agent?.icIntents?.[currentExecutionId] || input.intents;\n    const currentIndex = agent?.icLoopIndexes?.[currentExecutionId] || 0;\n    const currentIntent = intents[currentIndex] || {};\n    const { intent, task } = currentIntent;\n    const state = currentIndex === intents.length ? 'end' : 'continue'\n    const icLoopIndexes = { ...(agent?.icLoopIndexes || {}), [_id]: state === 'end' ? undefined : currentIndex + 1 };\n    const icIntents = { ...(agent?.icIntents || {}), [_id]: state === 'end' ? undefined : intents };\n    return { ...input, intent, state: currentIndex === intents.length ? 'end' : 'continue', icLoopIndexes, icIntents, query: task };\n};\n\nmain()\n"
      },
      "globalVariables": [
        {
          "referencePath": "$output.icLoopIndexes",
          "name": "icLoopIndexes"
        },
        {
          "referencePath": "$output.icIntents",
          "name": "icIntents"
        }
      ],
      "transitions": [
        {
          "_id": "38077cd8-89b4-4d15-99c1-38376aa8f653-b9c68b19-c59e-49c9-b203-81f6b3460e46",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "validate_claim_amount"
            }
          ],
          "nextTask": "b9c68b19-c59e-49c9-b203-81f6b3460e46"
        },
        {
          "_id": "38077cd8-89b4-4d15-99c1-38376aa8f653-472de401-4431-4528-b8bf-d811fc76bc0d",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "flag_duplicate_charges"
            }
          ],
          "nextTask": "472de401-4431-4528-b8bf-d811fc76bc0d"
        },
        {
          "_id": "38077cd8-89b4-4d15-99c1-38376aa8f653-0b867707-45f7-4a78-9c65-0047df3024b1",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            },
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.state",
              "value": "end"
            }
          ],
          "nextTask": "0b867707-45f7-4a78-9c65-0047df3024b1"
        }
      ]
    },
    {
      "_id": "b9c68b19-c59e-49c9-b203-81f6b3460e46",
      "type": "Workflow",
      "config": {
        "name": "Intent - validate_claim_amount",
        "description": "Workflow for intent - validate_claim_amount",
        "workflowId": "25e2e800-e90a-4025-bfae-84f622cd7b67"
      },
      "transitions": [
        {
          "_id": "b9c68b19-c59e-49c9-b203-81f6b3460e46-38077cd8-89b4-4d15-99c1-38376aa8f653",
          "name": "Mini agent execution completed",
          "nextTask": "38077cd8-89b4-4d15-99c1-38376aa8f653"
        }
      ]
    },
    {
      "_id": "472de401-4431-4528-b8bf-d811fc76bc0d",
      "type": "Workflow",
      "config": {
        "name": "Intent - flag_duplicate_charges",
        "description": "Workflow for intent - flag_duplicate_charges",
        "workflowId": "08710117-02c6-4a58-b202-7e6a5251bec2"
      },
      "transitions": [
        {
          "_id": "472de401-4431-4528-b8bf-d811fc76bc0d-38077cd8-89b4-4d15-99c1-38376aa8f653",
          "name": "Mini agent execution completed",
          "nextTask": "38077cd8-89b4-4d15-99c1-38376aa8f653"
        }
      ]
    },
    {
      "_id": "1491a48b-e189-4bf3-873d-c09bdc377bda",
      "transitions": [
        {
          "_id": "1491a48b-e189-4bf3-873d-c09bdc377bda-0b867707-45f7-4a78-9c65-0047df3024b1",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "0b867707-45f7-4a78-9c65-0047df3024b1"
        }
      ],
      "type": "Output",
      "config": {
        "name": "Output",
        "description": "Output the response to the user",
        "type": "external",
        "text": "Unable to complete task $agent.query"
      }
    },
    {
      "_id": "f2d57cd2-2706-499d-a858-1f7c6be65491",
      "transitions": [
        {
          "_id": "f2d57cd2-2706-499d-a858-1f7c6be65491-0b867707-45f7-4a78-9c65-0047df3024b1",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "0b867707-45f7-4a78-9c65-0047df3024b1"
        }
      ],
      "type": "Display",
      "config": {
        "name": "Display",
        "description": "Display the response to the user",
        "type": "text",
        "text": "$input.content"
      }
    }
  ],
  "type": "Conversational",
  "version": "latest"
}